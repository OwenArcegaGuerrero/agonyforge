# Configuration variables for your site.
CORS_ALLOWED_ORIGINS=http://localhost:3000
PROXY_REMOTE_IP_HEADER=x-forwarded-for

# These variables tell the MUD how to connect to PostgreSQL.
#
# Values for SPRING_JPA_HIBERNATE_DDL_AUTO make Hibernate do very different things:
# "create"      -- First drop any existing tables, then recreate them. (recommended for dev)
# "create-drop" -- Recreate the database as with 'create' but delete it when the application shuts down.
# "update"      -- Attempt to add new tables or columns to existing schema. Won't delete anything.
# "validate"    -- Check whether existing schema matches expectations, throw an exception if not. (recommended for prod)
# "none"        -- Don't generate or delete anything.
#
SPRING_JPA_HIBERNATE_DDL_AUTO=create
SPRING_DATASOURCE_URL=jdbc:postgresql://postgresql:5432/agonyforge
SPRING_DATASOURCE_USERNAME=postgresql
SPRING_DATASOURCE_PASSWORD=postgresql

# The following tell the MUD where to find the broker's STOMP connector, and the credentials to use to
# log into it both as the "System" user and a regular user.
MUD_BROKER_SSL=false
MUD_BROKER_HOST=rabbitmq
MUD_BROKER_PORT=61613
MUD_BROKER_SYSTEM_USERNAME=guest
MUD_BROKER_SYSTEM_PASSWORD=guest
MUD_BROKER_CLIENT_USERNAME=guest
MUD_BROKER_CLIENT_PASSWORD=guest

# You will need to go into your developer settings in GitHub and create a new OAuth application. It will give
# you a client ID and secret. Then you will be able to fill out the information here. Remember to never commit
# secrets into git!
SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GITHUB_CLIENTID=********************
SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GITHUB_CLIENTSECRET=***************************************
SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GITHUB_REDIRECTURI=http://localhost:8080/login/oauth2/code/github
