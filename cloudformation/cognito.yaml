AWSTemplateFormatVersion: '2010-09-09'
Description: Cognito User Pool for Agony Forge MUD
Parameters:
  UserPoolName:
    Type: String
    Description: The name of the User Pool to create.
    Default: agony-forge-users
  CognitoDomain:
    Type: String
    Description: The prefix for the Cognito auth URL.
    Default: NAME.auth.REGION.amazoncognito.com
  OAuthCallbackURLs:
    Type: String
    Description: Comma separated list of callback URLs.
    Default: http://localhost:8080/login/oauth2/code/cognito
  DefaultRedirectURI:
    Type: String
    Description: Default URI to redirect to. Must be in the OAuthCallbackURLs list.
    Default: http://localhost:8080/login/oauth2/code/cognito
  LogoutURLs:
    Type: String
    Description: Comma separated list of logout URLs.
    Default: http://localhost:8080
  SecretName:
    Type: String
    Description: Name of secret in Secrets Manager.
  AwsClientId:
    Type: String
    Description: Key for Client ID in Secrets Manager.
  AwsClientSecret:
    Type: String
    Description: Key for Client Secret in Secrets Manager.
Resources:
  CognitoUserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      AdminCreateUserConfig:
        AllowAdminCreateUserOnly: true
      UsernameConfiguration:
        CaseSensitive: false
      UserPoolName: !Ref UserPoolName
  CognitoUserPoolDomain:
    Type: AWS::Cognito::UserPoolDomain
    Properties:
      Domain: !Ref CognitoDomain
      UserPoolId:
        Ref: CognitoUserPool
  CognitoUserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    DependsOn:
      - CognitoAmazonIdentityProvider
    Properties:
      AllowedOAuthFlows:
        - code
      AllowedOAuthFlowsUserPoolClient: true
      AllowedOAuthScopes:
        - openid
      CallbackURLs: !Split [",", !Ref OAuthCallbackURLs]
      ClientName: !Join ["-", [ !Ref UserPoolName, "client" ] ]
      DefaultRedirectURI: !Ref DefaultRedirectURI
      ExplicitAuthFlows:
        - ALLOW_CUSTOM_AUTH
        - ALLOW_USER_SRP_AUTH
        - ALLOW_REFRESH_TOKEN_AUTH
      GenerateSecret: true
      LogoutURLs: !Split [",", !Ref LogoutURLs]
      PreventUserExistenceErrors: ENABLED
      SupportedIdentityProviders:
        - LoginWithAmazon
      TokenValidityUnits:
        AccessToken: days
        IdToken: days
        RefreshToken: days
      AccessTokenValidity: 1
      IdTokenValidity: 1
      RefreshTokenValidity: 30
      UserPoolId:
        Ref: CognitoUserPool
  CognitoAmazonIdentityProvider:
    Type: AWS::Cognito::UserPoolIdentityProvider
    Properties:
      AttributeMapping:
        username: user_id
        email: email
        given_name: name
        zoneinfo: postal_code
      ProviderDetails:
        client_id: !Sub "{{resolve:secretsmanager:${SecretName}:SecretString:${AwsClientId}}}"
        client_secret: !Sub "{{resolve:secretsmanager:${SecretName}:SecretString:${AwsClientSecret}}}"
        authorize_scopes: profile
      ProviderName: LoginWithAmazon
      ProviderType: LoginWithAmazon
      UserPoolId:
        Ref: CognitoUserPool
